(function() {
  if (typeof window !== 'undefined' && window.console && !document.currentScript) {
    const style = document.createElement('style');
    style.innerHTML = `
      .menu {
        position: fixed;
        top: 100px;
        right: 10px;
        background: orange;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
        z-index: 100000;
        font-size: 16px;
        width: 250px;
        cursor: move;
        user-select: none;
        overflow-y: auto;
        max-height: 80vh;
      }
      .menu * {
        color: black !important;
      }
      .menu input,
      .menu button {
        width: 100%;
        margin-top: 5px;
        margin-bottom: 10px;
      }
      .menu-header {
        font-weight: bold;
        margin-bottom: 10px;
        padding: 10px;
        background-color: #e67300;
        color: white !important;
        border-radius: 10px 10px 0 0;
        text-align: center;
        cursor: move;
      }
      .menu label {
        display: block;
        margin-top: 10px;
      }
    `;
    document.head.appendChild(style);

    const menu = document.createElement('div');
    menu.className = 'menu';
    menu.innerHTML = `
      <div class="menu-header">‚öôÔ∏è Settings</div>
      <label>üé® Background Color:<input type="color" id="backgroundColor" value="#ffffff"></label>
      <label>üñºÔ∏è Background Image URL:<input type="text" id="backgroundImage" placeholder="Enter image URL"></label>
      <label>üî† Font Size:<input type="range" id="fontSize" min="10" max="50" value="16"></label>
      <label>üìù Text Color:<input type="color" id="textColor" value="#000000"></label>
      <button id="toggleModeBtn">üåì Toggle Dark/Light Mode</button>
      <button id="resetBtn">üîÑ Reset</button>
    `;
    document.body.appendChild(menu);

    const get = id => document.getElementById(id);
    const updateTextStyle = (prop, value) => {
      document.querySelectorAll('h1,h2,h3,h4,h5,h6,p,span,li,a,div').forEach(el => {
        if (!el.closest('.menu')) el.style[prop] = value;
      });
    };

    const menuHeader = menu.querySelector('.menu-header');
    let dragging = false, offsetX, offsetY;

    menuHeader.addEventListener('mousedown', e => {
      dragging = true;
      offsetX = e.clientX - menu.offsetLeft;
      offsetY = e.clientY - menu.offsetTop;
    });
    document.addEventListener('mousemove', e => {
      if (dragging) {
        menu.style.left = `${e.clientX - offsetX}px`;
        menu.style.top = `${e.clientY - offsetY}px`;
      }
    });
    document.addEventListener('mouseup', () => dragging = false);

    get('backgroundColor').addEventListener('input', e => {
      document.body.style.backgroundColor = e.target.value;
      document.body.style.backgroundImage = 'none';
    });

    get('backgroundImage').addEventListener('input', e => {
      const url = e.target.value;
      document.body.style.backgroundImage = url ? `url(${url})` : 'none';
    });

    get('fontSize').addEventListener('input', e => {
      updateTextStyle('fontSize', e.target.value + 'px');
    });

    get('textColor').addEventListener('input', e => {
      updateTextStyle('color', e.target.value);
    });

    get('toggleModeBtn').addEventListener('click', () => {
      if (document.body.style.backgroundColor === 'rgb(0, 0, 0)') {
        document.body.style.backgroundColor = '#ffffff';
        document.body.style.color = '#000000';
        document.body.style.backgroundImage = 'none';
      } else {
        document.body.style.backgroundColor = '#000000';
        document.body.style.color = '#ffffff';
        document.body.style.backgroundImage = 'none';
      }
    });

    get('resetBtn').addEventListener('click', () => {
      document.body.style.backgroundColor = '#ffffff';
      document.body.style.color = '#000000';
      document.body.style.backgroundImage = 'none';
      updateTextStyle('color', '#000000');
      updateTextStyle('fontSize', '16px');
    });

    console.log('Custom menu activated! You can now interact with the settings.');
  } else {
    console.log('This script can only be run in the browser console!');
  }
})();
